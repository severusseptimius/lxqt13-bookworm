/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a org.lxqt.global_key_shortcuts.native -c OrgLxqtGlobalActionNativeAdaptor -i native_adaptor.h -l NativeAdaptor /home/debian/Lxqt1.3/lxqt-globalkeyes/lxqt-globalkeys-1.3.0/obj-x86_64-linux-gnu/daemon/org.lxqt.global_key_shortcuts.native.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_LXQT_GLOBAL_KEY_SHORTCUTS_NATIVE_H
#define ORG_LXQT_GLOBAL_KEY_SHORTCUTS_NATIVE_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "native_adaptor.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.lxqt.global_key_shortcuts.native
 */
class OrgLxqtGlobalActionNativeAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.lxqt.global_key_shortcuts.native")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.lxqt.global_key_shortcuts.native\">\n"
"    <method name=\"addClientAction\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"shortcut\"/>\n"
"      <arg direction=\"in\" type=\"o\" name=\"path\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"description\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"usedShortcut\"/>\n"
"      <arg direction=\"out\" type=\"t\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"modifyClientAction\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"path\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"description\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"changeClientActionShortcut\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"path\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"shortcut\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"usedShortcut\"/>\n"
"    </method>\n"
"    <method name=\"deactivateClientAction\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"path\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"removeClientAction\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"path\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"enableClientAction\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"path\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"enabled\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"isClientActionEnabled\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"path\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"grabShortcut\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"timeout\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"shortcut\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"failed\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"cancelled\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"timedout\"/>\n"
"    </method>\n"
"    <method name=\"cancelShortcutGrab\"/>\n"
"  </interface>\n"
        "")
public:
    OrgLxqtGlobalActionNativeAdaptor(NativeAdaptor *parent);
    virtual ~OrgLxqtGlobalActionNativeAdaptor();

    inline NativeAdaptor *parent() const
    { return static_cast<NativeAdaptor *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QString addClientAction(const QString &shortcut, const QDBusObjectPath &path, const QString &description, qulonglong &id);
    void cancelShortcutGrab();
    QString changeClientActionShortcut(const QDBusObjectPath &path, const QString &shortcut);
    bool deactivateClientAction(const QDBusObjectPath &path);
    bool enableClientAction(const QDBusObjectPath &path, bool enabled);
    QString grabShortcut(uint timeout, bool &failed, bool &cancelled, bool &timedout);
    bool isClientActionEnabled(const QDBusObjectPath &path);
    bool modifyClientAction(const QDBusObjectPath &path, const QString &description);
    bool removeClientAction(const QDBusObjectPath &path);
Q_SIGNALS: // SIGNALS
};

#endif
