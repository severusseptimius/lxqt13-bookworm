/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a statusnotifieritemadaptor -i sniproxy.h -l SNIProxy /home/debian/Lxqt1.3/lxqt-panel/lxqt-panel-1.3.0/plugin-tray/org.kde.StatusNotifierItem.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "statusnotifieritemadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class StatusNotifierItemAdaptor
 */

StatusNotifierItemAdaptor::StatusNotifierItemAdaptor(SNIProxy *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

StatusNotifierItemAdaptor::~StatusNotifierItemAdaptor()
{
    // destructor
}

QString StatusNotifierItemAdaptor::category() const
{
    // get the value of property Category
    return qvariant_cast< QString >(parent()->property("Category"));
}

KDbusImageVector StatusNotifierItemAdaptor::iconPixmap() const
{
    // get the value of property IconPixmap
    return qvariant_cast< KDbusImageVector >(parent()->property("IconPixmap"));
}

QString StatusNotifierItemAdaptor::id() const
{
    // get the value of property Id
    return qvariant_cast< QString >(parent()->property("Id"));
}

bool StatusNotifierItemAdaptor::itemIsMenu() const
{
    // get the value of property ItemIsMenu
    return qvariant_cast< bool >(parent()->property("ItemIsMenu"));
}

QString StatusNotifierItemAdaptor::status() const
{
    // get the value of property Status
    return qvariant_cast< QString >(parent()->property("Status"));
}

QString StatusNotifierItemAdaptor::title() const
{
    // get the value of property Title
    return qvariant_cast< QString >(parent()->property("Title"));
}

int StatusNotifierItemAdaptor::windowId() const
{
    // get the value of property WindowId
    return qvariant_cast< int >(parent()->property("WindowId"));
}

void StatusNotifierItemAdaptor::Activate(int x, int y)
{
    // handle method call org.kde.StatusNotifierItem.Activate
    parent()->Activate(x, y);
}

void StatusNotifierItemAdaptor::ContextMenu(int x, int y)
{
    // handle method call org.kde.StatusNotifierItem.ContextMenu
    parent()->ContextMenu(x, y);
}

void StatusNotifierItemAdaptor::Scroll(int delta, const QString &orientation)
{
    // handle method call org.kde.StatusNotifierItem.Scroll
    parent()->Scroll(delta, orientation);
}

void StatusNotifierItemAdaptor::SecondaryActivate(int x, int y)
{
    // handle method call org.kde.StatusNotifierItem.SecondaryActivate
    parent()->SecondaryActivate(x, y);
}


#include "statusnotifieritemadaptor.moc"
